name: Sanity check
on: [push]

jobs:
  commits_check_job:
    runs-on: ubuntu-latest
    name: Commits Check
    steps:
      - name: Lint PR commits
        uses: actions/github-script@v5
        with:
          script: |
            const rules = [
              {
                pattern: /^[^\r]*$/,
                error: "Commit message contains CRLF line breaks (only unix-style LF linebreaks are allowed)",
              },
              {
                pattern: /^.{0,72}(?:\n(?:(.{0,72})|(.*?([a-z]+:\/\/)?(([a-zA-Z0-9_]|-)+\.)+[a-z]{2,}(:\d+)?([a-zA-Z_0-9@:%\+.~\?&/=]|-)+).*?))*$/,
                error: "Commit message lines are too long (maximum allowed is 72 characters, except for URLs)",
              },
              {
                pattern: /^\S.*?\S: .+/,
                error: "Missing category in commit title (if this is a fix up of a previous commit, it should be squashed)",
              },
              {
                pattern: /^\S.*?: [A-Z0-9]/,
                error: "First word of commit after the subsystem is not capitalized",
              },
              {
                pattern: /^.+[^.\n](\n.*)*$/,
                error: "Commit title ends in a period",
              },
              {
                pattern: /^((?!Signed-off-by: )[\s\S])*$/,
                error: "Commit body contains a Signed-off-by tag",
              },
            ];

            // const { repository, pull_request } = context.payload;
            const repository = { owner: { login: "serenityOS" }, name: "serenity" };
            const pull_request = { number: 10642 };

            // NOTE: This maxes out at 250 commits. If this becomes a problem, see:
            // https://octokit.github.io/rest.js/v18#pulls-list-commits
            const opts = github.rest.pulls.listCommits.endpoint.merge({
              owner: repository.owner.login,
              repo: repository.name,
              pull_number: pull_request.number,
            });
            const commits = await github.paginate(opts);

            const errors = [];
            for (const { sha, commit: { message } } of commits) {
              for (const { pattern, error } of rules) {
                if (pattern.test(message)) {
                  errors.push(`  ${sha}    ${error}`)
                }
              }
            }

            if (errors.length > 0) {
              core.setFailed(`\n\n${errors.join("\n")}\n\n`);
            }
