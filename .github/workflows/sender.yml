name: Release Builder

on: push

jobs:
  tag:
    runs-on: ubuntu-latest
    steps:
      - name: Collect Changed Files
        id: changed
        uses: actions/github-script@0.3.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const {sha: ref, payload: {repository: {name: repo, owner: {name: owner}} }} = context;
            const {data: {files}} = await github.repos.getCommit({owner, repo, ref });
            const pkg = files.filter(f.filename == "package.json")
            if (!pkg) return false;
            # const {patch} = pkg[0]
            console.log(pkg[0])
      #
      # - name: Tag New Version
      #   if: "steps.changed.outputs.result"
      #   uses: actions/github-script@0.3.0
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       const {sha, payload: {repository: {name: repo, owner: {name: owner}} }} = context;
      #       const version
      #       const tag = `v${version}`
      #       github.git.createRef({owner, repo, sha, ref: `refs/tags/${tag}`})
      #       await github.repos.
      #
      # - name: Repository Dispatch
      #   uses: peter-evans/repository-dispatch@v1
      #   with:
      #     token: ${{ secrets.REPO_ACCESS_TOKEN }}
      #     repository: username/my-repo
      #     event-type: my-event
      #     client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}", "commit": $COMMIT}'
